@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap');

//  Variables

$fontFamily: 'Montserrat', sans-serif;
$fontSize: 18px;
$textColor: #6C7587;

$height: 54px;

$bgColor: #EBECF0;
$iconColor: #8992A5;
$acColor: rgb(255, 38, 0);

$accentBlue: #1657F0;
$brightBlue: #36D7E0;

$darkShadow: #484f60;
$lightShadow: #FFFFFF;

$dropShadow: 8px 8px 12px -2px rgba($darkShadow, 0.4),
             -6px -6px 12px -1px rgba($lightShadow, 1);

$innerShadow: inset -4px -4px 6px -1px rgba($lightShadow, 1),
              inset 2px 2px 8px -1px rgba($darkShadow, 0.5);

// Mixins

//media-queries
@mixin respond-to($breakpoint) {
    @if $breakpoint == small {
      @media (max-width: 700px) {
        @content;
      }
    } @else if $breakpoint == medium {
      @media (max-width: 1160px) {
        @content;
      }
    } @else if $breakpoint == large {
      @media (min-width: 1161px) {
        @content;
      }
    }
  }

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin applyFontStyle() {
  font-family: $fontFamily;
  font-size: $fontSize;
  line-height: $fontSize;
  color: $textColor;
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Layout
*, *:before, *:after {
  box-sizing: border-box;
}


// Global

%shared-styles {
  @include applyFontStyle;
  padding: 0 8px;
  position: relative;
  border: 3px solid rgba($lightShadow, 0);
  outline: none;
  text-align: center;
  background-color: $bgColor;
  transition: all 250ms ease-in-out;
  
  &:hover {
    box-shadow: none;
    border-color: rgba($lightShadow, 0.5);
  }
}

button {
  @extend %shared-styles;
  box-shadow: $dropShadow;
  cursor: pointer;

  &:active {
    box-shadow: $innerShadow;
    border-color: rgba($lightShadow, 0);
  }
  
  & > * { vertical-align: middle; }
  & > span:last-child { padding-left: 8px; }
}

input {
  @extend %shared-styles;
  box-shadow: $innerShadow;
  
  &:focus {
    box-shadow: none;
    border-color: rgba($lightShadow, 0.5);
  }

  &::placeholder {
    @include applyFontStyle;
    opacity: 1;
  }
}

.icon {
  @include size(24px);
  fill: $textColor;
}


// Oval Buttons

%oval-btn {
  height: $height;
  padding: 0 28px;
  border-radius: 40px;
}

.oval-xlg {
  @extend %oval-btn;
  width: 100%;
}

.oval-lg {
  @extend %oval-btn;
  width: 210px;
  
  &--with-icon {
    @extend .oval-lg;
    text-align: left;
  }
}

.oval-sm {
  @extend %oval-btn;
  width: 140px;
}

// Toggle

.toggle {
  @include size(80px, $height);
  position: relative;

  &__input {
    display: none;
    &:checked + .toggle__switch {
      background-color: $accentBlue;
      box-shadow: 10px 10px 24px rgba($darkShadow, 0.4),
                  -8px -8px 20px rgba($lightShadow, 1);
      
      &:before { left: 50%; }
    }
  }

  &__switch {
    @include size($height, 32px);
    @include center;
    display: block;
    border-radius: 16px;
    box-shadow: -10px 10px 24px rgba($darkShadow, 0.4),
                8px -8px 20px rgba($lightShadow, 1);
    background-color: $bgColor;
    cursor: pointer;
    transition: all 300ms ease-in-out;
    
    &:before {
      content: "";
      @include size(38px);
      position: absolute;
      top: 50%;
      left: -20%;
      border-radius: 100%;
      background-color: $lightShadow;
      transform: translateY(-50%);
      box-shadow: 0px 1px 2px rgba($darkShadow, 0.5);
      transition: left 300ms ease-in-out;
    }
  }
}

// Radio

.radio {
  &__input {
    display: none;

    &:checked + .radio__btn {
      box-shadow: $innerShadow;
      border-color: rgba($lightShadow, 0);
      &:before { background-color: $iconColor; }
    }
  }
  
  &__btn {
    @include size($height);
    display: block;
    position: relative;
    border: 3px solid rgba($lightShadow, 0);
    border-radius: 100%;
    box-shadow: $dropShadow;
    background-color: $bgColor;
    cursor: pointer;
    transition: all 250ms ease-in-out;
  
    &:hover {
      box-shadow: none;
      border-color: rgba($lightShadow, 0.5);
    }
    
    &:before {
      content: "";
      @include size(20px);
      @include center;
      border-radius: 100%;
      border: 3px solid $iconColor;
      transition: all 200ms ease-in-out;
    }
  }
}

// Graph

@mixin lineHeights($barHeight, $fillHeight) {
  height: $barHeight;
  &:before { height: $fillHeight; }
}

.graph {
  width: 250px;
  align-items: flex-end;
  
  &__line {
    width: 32px;
    position: relative;
    border-radius: 32px;
    box-shadow: $innerShadow;
    background-color: $bgColor;
    
    &:before {
      content: "";
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: inherit;
      background-color: $accentBlue;
    }
    
    &--one {
      @extend .graph__line;
      @include lineHeights(66%, 58%);
    }
    
    &--two {
      @extend .graph__line;
      @include lineHeights(90%, 80%);
    }
    
    &--three {
      @extend .graph__line;
      @include lineHeights(50%, 45%);
    }
    
    &--four {
      @extend .graph__line;
      @include lineHeights(100%, 83%);
    }
    
    &--five {
      @extend .graph__line;
      @include lineHeights(66%, 66%);
    }
  }
}

// Search

.search {
  position: relative;
  
  &__icon {
    position: absolute;
    z-index: 2;
    top: 50%;
    left: 28px;
    transform: translateY(-50%);
    stroke-width: 0.5px;
  }
  
  &__input {
    padding: 0 60px;
    text-align: left;
  }
}

// Progress Bar

.progress {
  @include size(100%, 12px);


  position: relative;
  margin-top: 16px;
  border-radius: 12px;
  box-shadow: $dropShadow;
  background-color: $bgColor;

  $progress: 40%;

  &__fill {
    @include size($progress, 100%);
    position: absolute;
    border-radius: inherit;
    background: linear-gradient(to right, $accentBlue, $brightBlue);
    
    &:before {
      @include applyFontStyle;
      content: "#{$progress}";
      padding: 11px 15px;
      margin-top: -16px;
      position: absolute;
      top: 0;
      right: 0;
      transform: translate(50%, -100%);
      border-radius: 8px;
      box-shadow: $dropShadow;
      background-color: $bgColor;
    }

    &:after {
      content: "";
      @include size(0);
      position: absolute;
      right: 0;
      bottom: 12px;
      transform: translate(50%, -100%);
      border-top: 9px solid $bgColor;
      border-left: 8px solid transparent;
      border-right: 8px solid transparent;
    }
  }
}